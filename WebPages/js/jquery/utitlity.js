!function (factory) { if (typeof define == 'function' && (define.amd != undefined || define.cmd != undefined)) { define(function () { return factory() }) } else { var ex = factory(); if (typeof module !== 'undefined' && typeof exports === 'object') { module.exports = ex } else { for (var i in ex) { window[i] = ex[i] } } } }(function () { var common = {}; function Guid() { this.date = new Date() } Guid.prototype.newGuid = function () { this.date = new Date(); var guidStr = ''; sexadecimalDate = this.hexadecimal(this.getGuidDate(), 16); sexadecimalTime = this.hexadecimal(this.getGuidTime(), 16); for (var i = 0; i < 9; i++) { guidStr += Math.floor(Math.random() * 16).toString(16) } guidStr += sexadecimalDate; guidStr += sexadecimalTime; while (guidStr.length < 32) { guidStr += Math.floor(Math.random() * 16).toString(16) } return this.formatGuid(guidStr) }; Guid.prototype.getGuidDate = function () { return this.date.getFullYear() + this.addZero(this.date.getMonth() + 1) + this.addZero(this.date.getDay()) }; Guid.prototype.getGuidTime = function () { return this.addZero(this.date.getHours()) + this.addZero(this.date.getMinutes()) + this.addZero(this.date.getSeconds()) + this.addZero(parseInt(this.date.getMilliseconds() / 10)) }; Guid.prototype.addZero = function (num) { if (Number(num).toString() != 'NaN' && num >= 0 && num < 10) { return '0' + Math.floor(num) } else { return num.toString() } }; Guid.prototype.hexadecimal = function (num, x, y) { if (y != undefined) { return parseInt(num.toString(), y).toString(x) } else { return parseInt(num.toString()).toString(x) } }; Guid.prototype.formatGuid = function (guidStr) { var str1 = guidStr.slice(0, 8), str2 = guidStr.slice(8, 12), str3 = guidStr.slice(12, 16), str4 = guidStr.slice(16, 20), str5 = guidStr.slice(20); return str1 + str2 + str3 + str4 + str5 }; Guid.Guid = Guid; return Guid });
//# guid.js